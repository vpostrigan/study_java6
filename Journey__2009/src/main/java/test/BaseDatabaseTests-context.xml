<?xml version="1.0" encoding="utf-8"?>
<!--
	/* *************************************************************************
	* 24.07.2009
	*
	* (C) Eclipse SP LLC. All rights reserved
	*
	* This config provides only those beans which are likely to be needed by all
	* database tests.
	* Do not add beans here which are needed only by one or a few tests.
	* It is best to construct instances of a class being tested in code.
	* If constructing an instance of a class being tested is very complicated,
	* 1) give the test case its own context which constructs the instance, and
	* 2) consider redesigning the component and/or reconsidering your testing strategy. 
	* 
	* $Revision: 170 $
	* $Author: dproshkin_tckh $
	* $Date: 2008-07-24 21:12:18 +0300 (Чт, 24 июл 2008) $
	* **************************************************************************
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
		
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- System properties override properties in files. Introduced to permit running
		     tests against an arbitrary database by defining jdbc.url. -->
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="locations">
			<list>
				<value>/test/jdbc.properties</value>
				<value>/log4j.properties</value>
			</list>
		</property>
	</bean>
		
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>
